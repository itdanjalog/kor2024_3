HTML : 하이퍼텍스트 마크업 언어     = 뼈대
CSS : 캐스팅 스타일 시트            = 옷
JS : 자바 스크립트                  = 행동/동작

[JS] JavaScript
    - 2009년 이후 node.js 나오면서 백엔드 역할 가능해졌다.
    - 요즘 트렌드에서는 자바스크립트 매우 중요한 역할 한다.
    1. 웹 클라이언트(  HTML,CSS,JS )
    2. 웹 서버( node.js )
    3. 모바일 ( react.js native )
    4. 소프트웨어( NW.js )

[ JS 사용하는 방법 ]
    방법1 : html 파일내 <body> 마크업 안에서 <script> 마크업 사용한다.
        <body>
            <script>
                JS코드작성
            </script>
        </body>
    방법2(권장) : JS 파일(.js) 생성하여 <head> 또는 <body> 마크업에서 js파일 불러온다.
        <head>
            <script src="js파일경로"></script>
        </head>

[ JS 데이터 ]
    - 데이터란? 한국어로는 자료 , 컴퓨터언어가 이해하는 자료들 , 리터럴
    1. 숫자 : 10 , 3.14 , 537
    2. 문자 : '안녕' , "안녕" , `안녕`
    3. 논리 : true , false 

[ JS 타입 / 자료형 / 분류 ]
    - 데이터들을 특정한 기준으로 분류한것 
    - 기본 타입 
        1.숫자타입 : Number     ex] 10 , 3.14 , 53718
        2.문자타입 : String     ex] '작은따옴표 또는 "큰따옴표 또는 `백틱 으로 감싼 자료
        3.논리타입 : Boolean    ex] true , false 

[ JS 출력함수 ]
    1. console.log( )   : 브라우저(크롬/엣지)의 F12(개발자도구) 메뉴 [console]탭 에서 출력하는 함수.

[ JS 입력함수 ]
    1. prompt( )        : 알림 메시지 와 입력(input) 기능 제공하는 함수.    * 함수1개당 입력창1개
        
[ 이스케이프/제어 문자 ]
    1. \n : 줄바꿈 
    2. \t : 들여쓰기 
    3. \\ : \한개 출력
    4. \' : '한개 출력 
    5. \" : "한개 출력 
    
[ 변수 와 상수 ]
    - 공통
        1. 데이터 *1개*를 저장할수 있는 메모리 공간
        2. 메모리 공간의 상징적인 이름이 존재한다. 변수명,상수명
        3. 자바(JAVA) 와 다르게 변수타입이 자동으로 관리하기 때문에 타입 명시할 필요가 없다.
            - let/const 로 선언후 모든 자료를 저장할수있다.
    1. 변수 : 변하는 수/값
        1. 변수 선언 : let 키워드 
            let 변수명 ;            * 값이 없는 변수 호출시 undefined
        2. 변수 값 초기화 : 변수 선언시 처음에 값 대입 행위
            let 변수명 = 초기값;
        3. 변수 값 호출 : 변수명을 작성하면 변수가 갖는 값이 반환된다.
            변수명
        4. 변수 값 수정 : 기존 변수명을 호출해서 새로운 값 대입 
            변수명 = 새로운값 
        5. 변수 연산 
            변수명A + 데이터 + 변수명B

    2. 상수 : 변하지 않는 수/값  
        1. 상수 선언 : const 키워드 
            const 상수명 = 초기값;      * 상수는 무조건 초기값을 넣어야한다. 
        2. 상수 값 호출 
            상수명 
        3. 상수 값 수정 [x] : 상수는 수정이 불가능하다.
            - Assignment to constant variable. 오류발생 
        4. 상수 연산 
            상수명A + 데이터 + 상수명B

